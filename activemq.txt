JAVA消息中间件
 中间件：非底层操作系统软件，非业务应用软件，不是直接给最终用户使用的，不能直接给客户带来价值的软件统称为中间件
 消息中间件：关注于数据的发送和接收，利用高效可靠的异步传递机制集成分布式系统

 JMS
  java message service 是一个JAVA平台中间关于面向消息中间件的API,用于在两个应用程序之间，或分布式系统中发送消息一，进行异步通信。
  定义：java api
  跨语言：不支持
  提供两种消息模型：p2p pub/sub
  消息类型：TextMessage,MapMessage,ByteMessage,StreamMessage,ObjectMessage,Message
  综合评价：JMS定义了JAVA API层面的标准;在JAVA体系中，多个Client均可以通过JMS进行交互，不需要应用修改代码，但是其跨平台的支持较差
AMQP
  advanced message queuing protocol 是一个提供统一消息服务的应用层标准协议，基于此协议的客户端与消息中间件可传递消息，并不受客户端/中间件不同产品，不同开发语言等条件的限制。
  定义：Wire-protocol
  跨语言：是
  提供了五种消息模型：direct,fanout,topic,headers,system
  消息类型:byte[]
  综合评价：AMQP的主特征就是面向消息、队列、路由（包括点对点和发布/订阅）、可靠、安全
产品：
ActiveMQ是Apache出品的，最流行的，能力强劲的开源消总线。是一个完全支持JMS1.1和J2EE1.4规范的JMS Provider实现。多种语言和多种协议编写客户端
RabbitMQ是一个开源的AMQP实现，服务器端用Erlang语言编写，用于在分布式系统中存储转发消息，在易用性，扩展性，高可用性等方面表现不俗。支持多种语言客户端
Kafka是一个高吞吐量的分布式发布订阅消息系统，是一个分布式的，分区的，可靠的分布式日志存储服务。它通过一种独一无二的设计提供了一个消息系统的功能。通过O（1）的磁盘数据结构提供消息的持久化，这种结构对于即使数TB的消息存储也有够长时间的稳定性能，即使是非常普通的硬件Kafka也可以支持每秒数百万的消息

JMS相关概念；
提供者：实现JMS规范的消息中间件服务器
客户端：改善或接收消息的应用程序 
生产者/发布者：创建并改善消息的客户端
消费者/订阅者：接收并处理消息的客户端
消息：应用程序之间传递的数据内容
消息模式：在客户端之间传递消息的方式，JMS中定义了主题和队列两种模式
  队列模型：
  -客户端包括生产者和消费者
  -队列中的消息只能被一个消费者消费
  -消费者可以随时消费队列中的消息
  主题模型：
  -客户端包括发布者和订阅者
  -主题中的消息被所有订阅者消费
  -消费者不能消费订阅之前就改善到主题中的消息

  JMS编码接口
  ConnectionFactory用于创建连接到消息中间件的连接工厂
  Connection代表了应用程序和消息服务器之间的通信链路
  Destination指消息发布和接收的地点，包括队列或主题
  Session表示一个单线程的上下文，用于改善和接收消息
  MessageConsumer由会话创建，用于接收发送到目标的消息
  MessageProducer由会话创建，用于发送消息到目标
  Message是在消费者和生产者之间传送的对象，消息头，一组消息属性，一个消息体
╭──────────────────────────────────────────────────────────────────────────────────────────╮
│                                                                                          ┃
│ ConnectionFactory     ------>    Connection                                              ┃
│                                     |                                                    ┃
│                                     | create                                             ┃
│                      create         ﹀       create                                      ┃
│MessageProducer    <----------    Session    ---------->    MessageConsumer               ┃ 
│       |                             |                             |                      ┃
│       | Send to                     |  create                     | Receive from         ┃
│       ﹀                            ﹀                            ﹀                     ┃
│    Destination                    Message                      Destination               ┃
│                                                                                          ┃
╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯

启动 activemq start
停止 activemq stop

