权限相关配置文件
保存用户组的信息文件 /etc/group 存储当前系统中所有用户组信息
group : x          : 123    : abc,def
组名  : 组密码占位符：组编号  ：组中用户名列表
存储当前系统中用户组密码信息  /etc/gshadow
group : *                      :      :abc,def
组名称：组密码（*/!//表示空密码）：管理员：成员列表
存储当前系统中用户相关信息  /etc/passwd
user   : x     : 123      : 456       : xxxxxxxx      : /home/user   : /bin/bash
用户名 ：密码   ：用户编号  :用户组编号 ： 用户注释信息   ： 用户主目录   ： shell类型
存储用户密码的配置文件  /etc/shadow
user    : vf;/zu8sf......:::::
用户名  : 密码            :::::

添加用户组：
groupadd 用户组
修改组名称：
groupmod -n 新组名称 旧组名称
修改组编号，不存在则创建：
groupmod -g 组编号 组名称
wr删除用户组  删除组前需要先删除用户
groupdel 组名称
添加用户：
useradd -g 组名 用户名
useradd -d 用户文件夹(/home/用户名)  用户名
usermod命令用于修改
删除用户：
userdel 用户名   保留个人文件夹
userdel -r 用户名    删除个人文件夹
禁止普通用户登录服务器：  touch /etc/nologin
禁用帐户： passwd -l 用户
解锁帐户： passwd -u 用户
清除密码： passwd -d 用户
修改密码： passwd 用户名

添加到附属组：
gpasswd -a 用户名 
修改组密码
gpasswd 组名称
切换组：
newgrp 组名

-文件
d目录
l软链接

rwxrwxrwx
u=所有者权限 g=所属组权限 r=其它人权限
r 读 = 4
w 写 = 2
x 执行 = 1

其它权限：
改变文件所有者：
chown 用户名 文件名
chown 用户名：组名 文件名
chgrp 组名 文件名

umask文件默认权限
umask  查询默认权限
umask 值  设置umask权限 临时有效
/etc/
因为建立文件最大权限为666，文件不应该一建立就具有执行权限，文件的默认权限为666换成字母：666（-rw-rw-rw-）-022(-----w--w-) = (-rw-r--r--)
目录最在权限是777
777（drwxrwxrwx） - 022(d----w--w-) = (drwxr-x--x)

sudo权限
命令：visudo   查看修改配置
配置文件 /etc/sudoers
格式：
root  ALL=(ALL)   ALL
用户  被管理主机持址=（可使用身份） 授权命令（绝对路径）
%组名   ALL = （ALL） ALL
组名  被管理主机地址=（可使用身份） 授权命令（绝对路径）
例：
abc  ALL=(ALL) /sbin/shutdown -r now

sudo -l 查看可用的sudo命令

定时任务：
at一次性定时任务
如果系统中慧存在/etc/at.allow文件，那么只有写入/etc/at.allow文件（白名单）中的用户可以使用at命令（/etc/at.deny（黑名单）文件会被忽略）
如果两个文件都不存在，那么只有root用户可以使用
at [选项] 时间
选项：
  -m 当at工作完成时，无论是否命令有输出，都用email通知执行at命令的用户
  -c 工作号：显示该at工作的实际内容

时间：
 -HH:MM
 -HH:MM YYYY-MM-DD
 -HH:MM[am|pm][month][date]
 -HH:MM[am|pm]+[minutes|hours|days|weeks]
 例：at now +5 minutes
 atq查询已经存在的系统任务


crontab循环定时任务
/etc/crin.allow     /etc/cron.deny文件与at相同
crontab -e
进入crontab编辑页面，会打开vim编辑工作
＊　＊　＊　＊　＊
第一个＊　一小时当中的第几分钟　　　０-５９
第二个＊　一天当中第几个小时　　　　０－２３
第三个＊　一个月当中第几天　　　　　１-３１
第四个＊　一年当中第几月　　　　　　１-１２
第五个＊　一周当中的星期几　　　　　０-７（０，７都代表周日）
配合特殊符号：
＊　代表任何时间。
，　代表s不连续的时间，比如“０ 8,12,16 * * *”代表8：00 12:00 16:00执行
-   代表连续的时间，比如“0,5,* * 1-6”代表在周一到周六5:00执行
/   代表每隔多久执行一次  比如“*/10 * * * * ”代表每隔10分钟执行一次
查询定时任务
crontab -l 
清除所有定时任务
crontab -r
/etc/crontab配置文件
*  *  *  *  * user-name  command to be executed
              用户        命令

anacron
anacron可以保证在系统关机的时候错过的定时任务，可以在系统开机之后再执行




1.shell变量
Bash中变量默认类型都是字符串
字符串型 / 整型 / 浮点型 / 日期型 

环境变量 ： 
设置环境变量 export 变量名=变量值 | export 变量名
常见：
HOSTNAME:主机名
SHELL：当前Shell
TERM:终端环境
HISTSIZE:历史命令条数
SSH_CLIENT:当前操作环境是用ssh连接的，这里记录客户端ip
SSH_TTY:ssh连接的终端
USER:当前登录的用户名
PS1 ： 命令提示符
/etc/sysconfig/i18n  开机启动语系
位置参数变量 ： 用来向脚本传递参数 
$n n为数字，$0代表命令本身;$1-$9代表第一到第九个参数，10以上的参数需要用大括号包含：${10}
$* 这个变量代表命令行中所有的参数，$*把所有的参数看成一个整体
for i in "$*"
  do 
    echo $i
  done
$@ 这个变量代表命令行中所有的参数，$@把每一个参数区分对待
for y in "$@"
  do 
    echo $y
  done 
$# 这个变量代表命令行中所有的参数的个数
预定义变量 ： Bash中已定义好的变量
$? 最后一次执行的命令的返回状态。如果这个变量的值为0，证明上一个命令正确执行;如果这个变量的值是非0，则证明上一个命令执行不正确
$$当前进程的进程号
$!后台运行的最后一个进程的进程号


变量名=变量值
调用变量 $变量名
变量追加：x=${x}456   
删除变量|环境变量： unset x

2.shell运算
declare [+/-] [选项] 变量名
- 给变量设定类型属性
+ 给变量取消类型属性
-a 将变量声明为数组型 
-i 将变量声明为整数型
-x 将变量声明为环境变量
-r 将变量声明为只读变量
-p 显示指定变量的被声明的类型

定义数组
declare -a efutureapp[0]="8088|order|efuture-order"
efutureapp[0]="8088|order|efuture-order"
efutureapp[1]="8089|ofc|efuture-ofc"
for i in ${efutureapp[*]}
  do
    echo $i
  done

shell数值运算
=$(expr $aa + $bb)
=$(($aa+$bb))
=$[$aa+$bb]

+,-
!,~
*,/,%
+,-
<<,>>
<=,>=,<,>
==,!=
&
^
|
&&
||
=,+=,-=,*=,/=,%=,&=,^=,|=,<<=,>>=

字符串处理
cut [选项] 文件名
-f 列号 
-d 分隔符

awk '条件1{动作1}条件2{动作2}...' 文件名
 条件 一般使用关系表达式作为条件
   BEGIN  动作开始前
     awk 'BEGIN{FS=":"}'  指定分隔符
	echo "aabc:bbcd:cccc" | awk 'BEGIN{FS=":"}{print $2}'
   END    动作开始后
 动作 格式化输出/流程控制语句

sed [选项] '[动作]' 文件名
选项
-n 一般sed命令会把所有数据都输出到屏幕，如果加入此选择则会把经过sed命令处理的行输出到屏幕
-e 允许对输入数据应用多条sed命令编辑
-i 用sed的修改结果直接修改读取数据的文件，而不是由屏幕输出
动作：
-a 追加
-c 行替换
-i 插入
-p 打印
-s 字符串替换




set showcmd
set number
set nohlsearch
set autoread
set nobackup
set noswapfile
set shiftwidth=2
set softtabstop=2
set expandtab
set termencoding=utf-8
filetype on
filetype indent on
filetype plugin on
filetype plugin indent on

